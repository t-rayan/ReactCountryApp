{"version":3,"sources":["context/types.js","context/CountryContext/CountryContext.js","context/CountryContext/CountryReducers.js","api/api.js","context/CountryContext/CountryState.js","context/ThemeContext/ThemeContext.js","components/DropDown/DropDown.js","components/SearchBar/SearchBar.js","components/Country/Country.js","components/CountryList/CountryList.js","components/Spinner/Spinner.js","components/Layout/Layout.js","screens/HomeScreen.js","screens/CountryDetailsScreen.js","components/Navbar/Navbar.js","context/ThemeContext/ThemeReducer.js","context/ThemeContext/ThemeState.js","App.js","reportWebVitals.js","index.js"],"names":["LOAD_COUNTRY_REQUEST","LOAD_COUNTRY_SUCCESS","LOAD_COUNTRY_FAIL","LOAD_DETAILS_REQUEST","LOAD_DETAILS_SUCCESS","LOAD_DETAILS_FAIL","SEARCH_COUNTRY_REQUEST","SEARCH_COUNTRY_SUCCESS","SEARCH_COUNTRY_FAIL","CLEAR_COUNTRY_DETAILS","LOAD_BYREGION_REQUEST","LOAD_BYREGION_SUCCESS","LOAD_BYREGION_FAIL","TOGGLE_THEME","CountryContext","createContext","countryReducer","state","type","payload","loading","countries","error","country","baseUrl","CountryState","children","useReducer","searchResults","dispatch","fetchAllCountries","a","Axios","get","headers","res","data","response","fetchSingleCountry","name","searchCountry","searchText","fetchByRegion","regionName","Provider","value","clearCountryHistory","ThemeContext","DropDown","useState","toggleDMenu","setToggleDMenu","selection","setSelection","useContext","isLight","light","dark","theme","handleSelection","e","target","innerText","className","onClick","style","backgroundColor","ui","color","syntax","map","region","SearchBar","setSearchText","marginRight","fontWeight","fontSize","placeholder","onChange","Country","to","src","flag","alt","population","capital","CountryList","Spinner","Layout","HomeScreen","useEffect","bg","CountryDetailsScreen","history","useHistory","cname","useParams","nativeName","subregion","languages","currencies","borders","topLevelDomain","push","d","c","l","b","Navbar","toggleTheme","display","alignItems","cursor","ThemeReducer","ThemeState","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42549da6.chunk.js","sourcesContent":["export const LOAD_COUNTRY_REQUEST = \"LOAD_COUNTRY_REQUEST\";\nexport const LOAD_COUNTRY_SUCCESS = \"LOAD_COUNTRY_SUCCESS\";\nexport const LOAD_COUNTRY_FAIL = \"LOAD_COUNTRY_FAIL\";\n\nexport const LOAD_DETAILS_REQUEST = \"LOAD_DETAILS_REQUEST\";\nexport const LOAD_DETAILS_SUCCESS = \"LOAD_DETAILS_SUCCESS\";\nexport const LOAD_DETAILS_FAIL = \"LOAD_DETAILS_FAIL\";\n\nexport const SEARCH_COUNTRY_REQUEST = \"SEARCH_COUNTRY_REQUEST\";\nexport const SEARCH_COUNTRY_SUCCESS = \"SEARCH_COUNTRY_SUCCESS\";\nexport const SEARCH_COUNTRY_FAIL = \"SEARCH_COUNTRY_FAIL\";\n\nexport const CLEAR_COUNTRY_DETAILS = \"CLEAR_COUNTRY_DETAILS\";\n\nexport const LOAD_BYREGION_REQUEST = \"LOAD_BYREGION_REQUEST\";\nexport const LOAD_BYREGION_SUCCESS = \"LOAD_BYREGION_SUCCESS\";\nexport const LOAD_BYREGION_FAIL = \"LOAD_BYREGION_FAIL\";\n\nexport const TOGGLE_THEME = \"TOGGLE_THEME\";\n","import  { createContext } from \"react\";\n\nconst CountryContext = createContext();\nexport default CountryContext;\n","import {\n  CLEAR_COUNTRY_DETAILS,\n  LOAD_BYREGION_FAIL,\n  LOAD_BYREGION_REQUEST,\n  LOAD_BYREGION_SUCCESS,\n  LOAD_COUNTRY_FAIL,\n  LOAD_COUNTRY_REQUEST,\n  LOAD_COUNTRY_SUCCESS,\n  LOAD_DETAILS_FAIL,\n  LOAD_DETAILS_REQUEST,\n  LOAD_DETAILS_SUCCESS,\n  SEARCH_COUNTRY_FAIL,\n  SEARCH_COUNTRY_REQUEST,\n  SEARCH_COUNTRY_SUCCESS,\n} from \"../types\";\n\nconst countryReducer = (state, { type, payload }) => {\n  switch (type) {\n    case LOAD_COUNTRY_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOAD_COUNTRY_SUCCESS:\n      return {\n        ...state,\n        countries: payload,\n        loading: false,\n      };\n    case LOAD_COUNTRY_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n\n    case LOAD_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOAD_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        country: payload,\n      };\n\n    case LOAD_DETAILS_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n\n    case SEARCH_COUNTRY_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case SEARCH_COUNTRY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        countries: payload,\n      };\n    case SEARCH_COUNTRY_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n    case CLEAR_COUNTRY_DETAILS:\n      return {\n        ...state,\n        country: \"\",\n      };\n\n    case LOAD_BYREGION_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOAD_BYREGION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        countries: payload,\n      };\n    case LOAD_BYREGION_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default countryReducer;\n","export const baseUrl = \"https://restcountries.com/v2\";\n","import React, { useReducer } from \"react\";\nimport Axios from \"axios\";\n\nimport {\n  LOAD_COUNTRY_FAIL,\n  LOAD_COUNTRY_REQUEST,\n  LOAD_COUNTRY_SUCCESS,\n  LOAD_DETAILS_FAIL,\n  LOAD_DETAILS_REQUEST,\n  LOAD_DETAILS_SUCCESS,\n  SEARCH_COUNTRY_REQUEST,\n  SEARCH_COUNTRY_SUCCESS,\n  SEARCH_COUNTRY_FAIL,\n  CLEAR_COUNTRY_DETAILS,\n  LOAD_BYREGION_REQUEST,\n  LOAD_BYREGION_FAIL,\n  LOAD_BYREGION_SUCCESS,\n} from \"../types\";\nimport CountryContext from \"./CountryContext\";\nimport countryReducer from \"./CountryReducers\";\n\nimport { baseUrl } from \"../../api/api\";\n\nfunction CountryState({ children }) {\n  const initialState = {\n    countries: [],\n    country: \"\",\n    loading: false,\n    error: null,\n    searchResults: [],\n  };\n\n  const [state, dispatch] = useReducer(countryReducer, initialState);\n\n  const header= {\n    'Access-Control-Allow-Origin' : '*',\n  }\n\n  // fetching all countries\n  const fetchAllCountries = async () => {\n    dispatch({\n      type: LOAD_COUNTRY_REQUEST,\n    });\n    try {\n      const res = await Axios.get(`${baseUrl}/all`, {headers:{\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n      }} );\n      dispatch({\n        type: LOAD_COUNTRY_SUCCESS,\n        payload: res?.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_COUNTRY_FAIL,\n        payload: error.response,\n      });\n    }\n  };\n\n  // fetching single country details\n  const fetchSingleCountry = async (name) => {\n    dispatch({\n      type: LOAD_DETAILS_REQUEST,\n    });\n    try {\n      const res = await Axios.get(`${baseUrl}/name/${name}`);\n      dispatch({\n        type: LOAD_DETAILS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_DETAILS_FAIL,\n        payload: error.response,\n      });\n    }\n  };\n\n  // search country with name\n  const searchCountry = async (searchText) => {\n    dispatch({\n      type: SEARCH_COUNTRY_REQUEST,\n    });\n\n    try {\n      const res = await Axios.get(`${baseUrl}/name/${searchText}`);\n      dispatch({\n        type: SEARCH_COUNTRY_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: SEARCH_COUNTRY_FAIL,\n        payload: error.response,\n      });\n    }\n  };\n\n  // FETCH COUNTRIES BY REGION\n  const fetchByRegion = async (regionName) => {\n    dispatch({\n      type: LOAD_BYREGION_REQUEST,\n    });\n\n    try {\n      const res = await Axios.get(`${baseUrl}/region/${regionName}`);\n      dispatch({\n        type: LOAD_BYREGION_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_BYREGION_FAIL,\n        payload: error.response,\n      });\n    }\n  };\n  // clear country history\n  const clearCountryHistory = () => {\n    dispatch({\n      type: CLEAR_COUNTRY_DETAILS,\n    });\n  };\n\n  return (\n    <div>\n      <CountryContext.Provider\n        value={{\n          countries: state.countries,\n          country: state.country,\n          loading: state.loading,\n          searchResults: state.searchResults,\n          fetchAllCountries,\n          fetchSingleCountry,\n          searchCountry,\n          clearCountryHistory,\n          fetchByRegion,\n        }}\n      >\n        {children}\n      </CountryContext.Provider>\n    </div>\n  );\n}\n\nexport default CountryState;\n","import { createContext } from \"react\";\n\nconst ThemeContext = createContext();\nexport default ThemeContext;\n","import React, { useState, useContext } from \"react\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport CountryContext from \"../../context/CountryContext/CountryContext\";\nimport ThemeContext from \"../../context/ThemeContext/ThemeContext\";\n\nimport \"./styles.css\";\n\nconst DropDown = () => {\n  const [toggleDMenu, setToggleDMenu] = useState(false);\n  const [selection, setSelection] = useState(\"Filter By Region\");\n\n  const { fetchByRegion } = useContext(CountryContext);\n  const { isLight, light, dark } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n\n  const regions = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  const handleDropMenu = () => {\n    setToggleDMenu(!toggleDMenu);\n  };\n\n  const handleSelection = (e) => {\n    fetchByRegion(e.target.innerText);\n    setToggleDMenu(false);\n    setSelection(e.target.innerText);\n  };\n\n  return (\n    <>\n      <div\n        className=\"ddownContainer\"\n        onClick={handleDropMenu}\n        style={{ backgroundColor: theme.ui, color: theme.syntax }}\n      >\n        <p className=\"dText\">{selection}</p>\n        <FiChevronDown className=\"dIcon\" style={{ color: theme.syntax }} />\n      </div>\n      {toggleDMenu && (\n        <div\n          className=\"dropMenu\"\n          style={{ backgroundColor: theme.ui, color: theme.syntax }}\n        >\n          {regions.map((region) => (\n            <p key={region} onClick={handleSelection}>\n              {region}\n            </p>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default DropDown;\n","import React, { useState, useContext } from \"react\";\nimport { FiSearch } from \"react-icons/fi\";\nimport CountryContext from \"../../context/CountryContext/CountryContext\";\nimport ThemeContext from \"../../context/ThemeContext/ThemeContext\";\n\nimport DropDown from \"../DropDown/DropDown\";\nimport \"./styles.css\";\n\nconst SearchBar = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const { searchCountry, fetchAllCountries } = useContext(CountryContext);\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n\n  return (\n    <div className=\"searchContainer\">\n      <div className=\"searchBox\" style={{ backgroundColor: theme.ui }}>\n        <FiSearch\n          style={{\n            marginRight: \".4rem\",\n            fontWeight: \"bold\",\n            fontSize: \"1.2rem\",\n            color: theme.syntax,\n          }}\n        />\n        <input\n          style={{ backgroundColor: theme.ui, color: theme.syntax }}\n          type=\"text\"\n          placeholder=\"Search for a country\"\n          className=\"searchInput\"\n          onChange={(e) => {\n            setSearchText(e.target.value);\n            if (searchText !== \"\") {\n              searchCountry(searchText);\n            } else {\n              fetchAllCountries();\n            }\n          }}\n        />\n      </div>\n      <div className=\"regionContainer\">\n        <DropDown />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ThemeContext from '../../context/ThemeContext/ThemeContext'\nimport \"./styles.css\";\n\nconst Country = ({ country }) => {\n  const {isLight, light, dark} = useContext(ThemeContext)\n  const theme = isLight ? light : dark\n  return (\n    <Link to={`${country?.name}`}>\n      <div className=\"countryCard\" style={{backgroundColor: theme.ui, color: theme.syntax}}>\n        <div className=\"countryFlag\">\n          <img src={country?.flag} alt=\"flag\" />\n        </div>\n        <div className=\"countryInfo\">\n          {country && <p className=\"name\">{country.name}</p>}\n          {country && (\n            <p className=\"population\">Population: {country.population}</p>\n          )}\n          {country && <p className=\"region\">Region: {country.region}</p>}\n          {country && <p className=\"capital\">Capital: {country.capital}</p>}\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Country;\n","import React, { useContext } from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nimport CountryContext from \"../../context/CountryContext/CountryContext\";\nimport Country from \"../Country/Country\";\n\nimport \"./styles.css\";\n\nconst CountryList = () => {\n  const { countries, searchResults } = useContext(CountryContext);\n\n  return (\n    <div className=\"countryContainer\">\n      <div className=\"countryLists\">\n        {countries?.map((country) => (\n          <Country key={country.name} country={country} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\n\nconst Layout = ({ children, loading }) => {\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Layout;\n","import React, { useEffect, useContext } from \"react\";\nimport CountryList from \"../components/CountryList/CountryList\";\nimport Layout from \"../components/Layout/Layout\";\nimport SearchBar from \"../components/SearchBar/SearchBar\";\nimport CountryContext from \"../context/CountryContext/CountryContext\";\nimport ThemeContext from \"../context/ThemeContext/ThemeContext\";\n\nconst HomeScreen = () => {\n  const { fetchAllCountries, loading } = useContext(CountryContext);\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n\n  useEffect(() => {\n    fetchAllCountries();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: theme.bg }}>\n      <SearchBar />\n      <Layout loading={loading}>\n        <CountryList />\n      </Layout>\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Layout from \"../components/Layout/Layout\";\nimport CountryContext from \"../context/CountryContext/CountryContext\";\nimport ThemeContext from \"../context/ThemeContext/ThemeContext\";\n\nimport { FiArrowLeft } from \"react-icons/fi\";\n\nconst CountryDetailsScreen = () => {\n  const history = useHistory();\n\n  const { cname } = useParams();\n  const { fetchSingleCountry, country, loading, clearCountryHistory } =\n    useContext(CountryContext);\n\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n\n  const {\n    flag,\n    name,\n    nativeName,\n    population,\n    region,\n    subregion,\n    capital,\n    languages,\n    currencies,\n    borders,\n    topLevelDomain,\n  } = country && country[0];\n\n  useEffect(() => {\n    fetchSingleCountry(cname);\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: theme.bg, color: theme.syntax }}>\n      <Layout loading={loading}>\n        {country && (\n          <>\n            <button\n              className=\"backBtn\"\n              style={{ backgroundColor: theme.ui, color: theme.syntax }}\n              onClick={() => {\n                history.push(\"/\");\n                clearCountryHistory();\n              }}\n            >\n              <FiArrowLeft />\n              <span>Back</span>\n            </button>\n            <div className=\"detailContainer\">\n              <div className=\"bigFlagContainer\">\n                <img src={flag} alt=\"flag\" className=\"bigFlag\" />\n              </div>\n              <div className=\"countryDetails\">\n                <p className=\"countryName\">{name}</p>\n                <div className=\"extraInfo\">\n                  <div className=\"left\">\n                    <p className=\"nativeName\">\n                      Native Name:{\" \"}\n                      <span className=\"smallText\">{nativeName}</span>{\" \"}\n                    </p>\n                    <p className=\"population\">\n                      Population:{\" \"}\n                      <span className=\"smallText\">{population}</span>{\" \"}\n                    </p>\n                    <p className=\"region\">\n                      Region: <span className=\"smallText\"> {region}</span>{\" \"}\n                    </p>\n                    <p className=\"subRegion\">\n                      Sub Region: <span className=\"smallText\">{subregion}</span>{\" \"}\n                    </p>\n                    <p className=\"capital\">\n                      Capital: <span className=\"smallText\"> {capital}</span>{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"right\">\n                    {/* {topLevelDomain && <p className=\"domain\">Top Level Domain: {topLevelDomain}</p> } */}\n                    <p className=\"domain\">\n                      Top Level Domain:\n                      {topLevelDomain?.map((d) => (\n                        <span key={d} className=\"smallText\">\n                          {d}\n                        </span>\n                      ))}\n                    </p>\n                    <p className=\"currencies\">\n                      Currencies:{\" \"}\n                      {currencies?.map((c) => (\n                        <span key={c.name} className=\"smallText\">\n                          {c.name}\n                        </span>\n                      ))}\n                    </p>\n                    <p className=\"languages\">\n                      Languages:\n                      {languages?.map((l) => (\n                        <span className=\"smallText\" key={l.name}>\n                          {l.name},\n                        </span>\n                      ))}{\" \"}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"borderCountries\">\n                  <p>Border Countries: </p>\n                  <div className=\"borderList\">\n                    {borders?.map((b) => (\n                      <span\n                        className=\"borders\"\n                        key={b}\n                        style={{\n                          backgroundColor: theme.ui,\n                          fontWeight: \"bold\",\n                        }}\n                      >\n                        {b}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </Layout>\n    </div>\n  );\n};\n\nexport default CountryDetailsScreen;\n","import React, { useContext } from \"react\";\nimport { FiMoon } from \"react-icons/fi\";\nimport ThemeContext from \"../../context/ThemeContext/ThemeContext\";\n\nimport \"./styles.css\";\n\nconst Navbar = () => {\n  const { isLight, dark, light, toggleTheme } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  return (\n    <nav style={{ backgroundColor: theme.ui, color: theme.syntax }}>\n      <div className=\"logo\">\n        <h2 className=\"appTitle\">Where in the world ?</h2>\n      </div>\n      <div\n        className=\"theme-switcher\"\n        style={{ display: \"flex\", alignItems: \"center\", cursor: \"pointer\" }}\n        onClick={() => toggleTheme()}\n      >\n        <FiMoon\n          style={{\n            marginRight: \".3rem\",\n            fontSize: \"1.3rem\",\n            backgroundColor: theme.ui,\n          }}\n        />\n        <span className=\"switch\">{isLight ? \"Dark Mode\" : \"Light Mode\"}</span>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { TOGGLE_THEME } from \"../types\";\n\nconst ThemeReducer = (state, { type, payload }) => {\n  switch (type) {\n    case TOGGLE_THEME:\n      return {\n        ...state,\n        isLight: !state.isLight,\n      };\n    default:\n      return {\n        state,\n      };\n  }\n};\n\nexport default ThemeReducer;\n","import React, { useReducer } from \"react\";\nimport { TOGGLE_THEME } from \"../types\";\n\nimport ThemeContext from \"./ThemeContext\";\nimport ThemeReducer from \"./ThemeReducer\";\n\nconst ThemeState = ({ children }) => {\n  const initialState = {\n    isLight: true,\n    dark: {\n      syntax: \"#fff\",\n      ui: \"hsl(209, 23%, 22%)\",\n      bg: \" hsl(207, 26%, 17%)\",\n    },\n    light: {\n      syntax: \"hsl(200, 15%, 8%)\",\n      ui: \"hsl(0, 0%, 100%)\",\n      bg: \"hsl(0, 0%, 98%)\",\n    },\n  };\n\n  const [state, dispatch] = useReducer(ThemeReducer, initialState);\n\n  const toggleTheme = () => {\n    dispatch({\n      type: TOGGLE_THEME,\n    });\n  };\n\n  return (\n    <div>\n      <ThemeContext.Provider\n        value={{\n          isLight: state.isLight,\n          light: state.light,\n          dark: state.dark,\n          toggleTheme,\n        }}\n      >\n        {children}\n      </ThemeContext.Provider>\n    </div>\n  );\n};\n\nexport default ThemeState;\n","import React from \"react\";\nimport CountryState from \"./context/CountryContext/CountryState\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CountryDetailsScreen from \"./screens/CountryDetailsScreen\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ThemeState from \"./context/ThemeContext/ThemeState\";\n\nfunction App() {\n  return (\n    <CountryState>\n      <ThemeState>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route path=\"/\" exact component={HomeScreen} />\n              <Route path=\"/:cname\" exact component={CountryDetailsScreen} />\n            </Switch>\n          </div>\n        </Router>\n      </ThemeState>\n    </CountryState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}